/**
 * generated by Xtext 2.12.0
 */
package com.kaleidoscope.usecase.showcase.xtext.employeeDsl.impl;

import com.kaleidoscope.usecase.showcase.xtext.employeeDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class EmployeeDslFactoryImpl extends EFactoryImpl implements EmployeeDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static EmployeeDslFactory init()
  {
    try
    {
      EmployeeDslFactory theEmployeeDslFactory = (EmployeeDslFactory)EPackage.Registry.INSTANCE.getEFactory(EmployeeDslPackage.eNS_URI);
      if (theEmployeeDslFactory != null)
      {
        return theEmployeeDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new EmployeeDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EmployeeDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case EmployeeDslPackage.EMPLOYEE_CONTAINER: return createEmployeeContainer();
      case EmployeeDslPackage.EMPLOYEE: return createEmployee();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EmployeeContainer createEmployeeContainer()
  {
    EmployeeContainerImpl employeeContainer = new EmployeeContainerImpl();
    return employeeContainer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Employee createEmployee()
  {
    EmployeeImpl employee = new EmployeeImpl();
    return employee;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EmployeeDslPackage getEmployeeDslPackage()
  {
    return (EmployeeDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static EmployeeDslPackage getPackage()
  {
    return EmployeeDslPackage.eINSTANCE;
  }

} //EmployeeDslFactoryImpl
