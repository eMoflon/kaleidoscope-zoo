/*
 * generated by Xtext 2.12.0
 */
grammar InternalEmployeeDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.kaleidoscope.usecase.showcase.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.kaleidoscope.usecase.showcase.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.kaleidoscope.usecase.showcase.xtext.services.EmployeeDslGrammarAccess;

}
@parser::members {
	private EmployeeDslGrammarAccess grammarAccess;

	public void setGrammarAccess(EmployeeDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEmployeeContainer
entryRuleEmployeeContainer
:
{ before(grammarAccess.getEmployeeContainerRule()); }
	 ruleEmployeeContainer
{ after(grammarAccess.getEmployeeContainerRule()); } 
	 EOF 
;

// Rule EmployeeContainer
ruleEmployeeContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmployeeContainerAccess().getEmployeesAssignment()); }
		(rule__EmployeeContainer__EmployeesAssignment)*
		{ after(grammarAccess.getEmployeeContainerAccess().getEmployeesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmployee
entryRuleEmployee
:
{ before(grammarAccess.getEmployeeRule()); }
	 ruleEmployee
{ after(grammarAccess.getEmployeeRule()); } 
	 EOF 
;

// Rule Employee
ruleEmployee 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmployeeAccess().getGroup()); }
		(rule__Employee__Group__0)
		{ after(grammarAccess.getEmployeeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__0__Impl
	rule__Employee__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getEmployeeAction_0()); }
	()
	{ after(grammarAccess.getEmployeeAccess().getEmployeeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__1__Impl
	rule__Employee__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getEmployeeKeyword_1()); }
	'Employee'
	{ after(grammarAccess.getEmployeeAccess().getEmployeeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__2__Impl
	rule__Employee__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getIDAssignment_2()); }
	(rule__Employee__IDAssignment_2)
	{ after(grammarAccess.getEmployeeAccess().getIDAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__3__Impl
	rule__Employee__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEmployeeAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__4__Impl
	rule__Employee__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getGroup_4()); }
	(rule__Employee__Group_4__0)?
	{ after(grammarAccess.getEmployeeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__5__Impl
	rule__Employee__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getGroup_5()); }
	(rule__Employee__Group_5__0)?
	{ after(grammarAccess.getEmployeeAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getEmployeeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Employee__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_4__0__Impl
	rule__Employee__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getNameKeyword_4_0()); }
	'name'
	{ after(grammarAccess.getEmployeeAccess().getNameKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getNameAssignment_4_1()); }
	(rule__Employee__NameAssignment_4_1)
	{ after(grammarAccess.getEmployeeAccess().getNameAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Employee__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_5__0__Impl
	rule__Employee__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getSalaryKeyword_5_0()); }
	'salary'
	{ after(grammarAccess.getEmployeeAccess().getSalaryKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Employee__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmployeeAccess().getSalaryAssignment_5_1()); }
	(rule__Employee__SalaryAssignment_5_1)
	{ after(grammarAccess.getEmployeeAccess().getSalaryAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmployeeContainer__EmployeesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeContainerAccess().getEmployeesEmployeeParserRuleCall_0()); }
		ruleEmployee
		{ after(grammarAccess.getEmployeeContainerAccess().getEmployeesEmployeeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__IDAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getIDEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getEmployeeAccess().getIDEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__NameAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getNameEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getEmployeeAccess().getNameEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Employee__SalaryAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmployeeAccess().getSalaryEIntParserRuleCall_5_1_0()); }
		ruleEInt
		{ after(grammarAccess.getEmployeeAccess().getSalaryEIntParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
