package bxtendDemonstratorImpl.rules;

import bxtendDemonstratorImpl.rules.Elem2Elem;
import org.eclipse.emf.ecore.resource.Resource;

public class Item2Group extends Elem2Elem {
  protected /* String */Object ruleID = "item2group";
  
  public Item2Group(final Resource src, final Resource trgt, final Resource corr) {
    super(src, trgt, corr);
  }
  
  public boolean checkIfBlockIsOccupiedByOtherGroup(final /* Grid */Object grid, final /* Group */Object group, final /* Block */Object block) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method equals(Group) is undefined for the type Object"
      + "\nThe method or field occupies is undefined for the type Object"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\ngroups cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\n! cannot be resolved"
      + "\nexists cannot be resolved"
      + "\n== cannot be resolved");
  }
  
  public boolean chkAddHorzTableToCorrGroupPsbl(final /* Grid */Object grid, final /* Block */Object firstBlock, final /* Block */Object secondBlock) {
    throw new Error("Unresolved compilation problems:"
      + "\ne cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ne cannot be resolved"
      + "\n!= cannot be resolved");
  }
  
  public boolean chkAddVertTableToCorrGroupPsbl(final /* Grid */Object grid, final /* Block */Object firstBlock, final /* Block */Object secondBlock) {
    throw new Error("Unresolved compilation problems:"
      + "\ns cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ns cannot be resolved"
      + "\n!= cannot be resolved");
  }
  
  public boolean chkAddFridgeToCorrGroupPsbl(final /* Grid */Object grid, final /* Block */Object firstBlock, final /* Block */Object secondBlock) {
    throw new Error("Unresolved compilation problems:"
      + "\ns cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ns cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nn cannot be resolved"
      + "\n!= cannot be resolved");
  }
  
  public boolean chkAddSinkToCorrGroupPsbl(final /* Grid */Object grid, final /* Block */Object firstBlock, final /* Block */Object secondBlock) {
    throw new Error("Unresolved compilation problems:"
      + "\ne cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ne cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nw cannot be resolved"
      + "\n!= cannot be resolved");
  }
  
  public boolean chkAddingCorrGroupToHrzTablePsbl(final /* Grid */Object grid, final /* Table */Object table, final /* Group */Object corrGroup) {
    throw new Error("Unresolved compilation problems:"
      + "\nBlock cannot be resolved to a type."
      + "\nThe method or field XIndex is undefined for the type Object"
      + "\nThe method or field YIndex is undefined for the type Object"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nblocks cannot be resolved"
      + "\nfindFirst cannot be resolved"
      + "\n== cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\n&& cannot be resolved"
      + "\n== cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\ne cannot be resolved"
      + "\n== cannot be resolved"
      + "\n|| cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n|| cannot be resolved"
      + "\ne cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ne cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved");
  }
  
  public boolean chkAddingCorrGroupToVertTablePsbl(final /* Grid */Object grid, final /* Table */Object table, final /* Group */Object corrGroup) {
    throw new Error("Unresolved compilation problems:"
      + "\nBlock cannot be resolved to a type."
      + "\nThe method or field XIndex is undefined for the type Object"
      + "\nThe method or field YIndex is undefined for the type Object"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nblocks cannot be resolved"
      + "\nfindFirst cannot be resolved"
      + "\n== cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\n&& cannot be resolved"
      + "\n== cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\ns cannot be resolved"
      + "\n== cannot be resolved"
      + "\n|| cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n|| cannot be resolved"
      + "\ns cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ns cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved");
  }
  
  public void targetToSource(final /* String */Object s) {
    throw new Error("Unresolved compilation problems:"
      + "\nItem cannot be resolved to a type."
      + "\nItemSocket cannot be resolved to a type."
      + "\nGroup cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nSink cannot be resolved to a type."
      + "\nFridge cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nGroup cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nGroup cannot be resolved to a type."
      + "\nHashMap cannot be resolved to a type."
      + "\nHashMap cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nGroup cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nGroup cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nGroup cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nGroup cannot be resolved to a type."
      + "\nThe method filter(java.lang.Class) is undefined for the type TreeIterator<EObject>"
      + "\nThe method or field eContainer is undefined for the type Object"
      + "\nThe method or field eContainer is undefined for the type Object"
      + "\nThe method get(int) is undefined for the type EList<EObject>"
      + "\nThe method or field XPos is undefined for the type Object"
      + "\nThe method or field YPos is undefined for the type Object"
      + "\nThe method or field XIndex is undefined for the type Object"
      + "\nThe method or field YIndex is undefined for the type Object"
      + "\nThe method or field Arrays is undefined"
      + "\nHashMap cannot be resolved."
      + "\nString cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nCannot cast from Object to int"
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nThe method getOrCreateCorrModelElement(EObject, String) from the type Elem2Elem refers to the missing type Object"
      + "\nUnreachable code: The case can never match. It is already handled by a previous condition."
      + "\nUnreachable code: The case can never match. It is already handled by a previous condition."
      + "\nThe method chkAddingCorrGroupToHrzTablePsbl(Grid, Table, Group) from the type Item2Group refers to the missing type Grid"
      + "\nThe method chkAddingCorrGroupToVertTablePsbl(Grid, Table, Group) from the type Item2Group refers to the missing type Grid"
      + "\nThe method setChoices(List) from the type Continuation refers to the missing type List"
      + "\nThe method setContext(HashMap) from the type Continuation refers to the missing type HashMap"
      + "\nThe method setFunction((HashMap, String)=>void) from the type Continuation refers to the missing type Object"
      + "\nThe method chkAddingCorrGroupToHrzTablePsbl(Grid, Table, Group) from the type Item2Group refers to the missing type Grid"
      + "\nThe method chkAddingCorrGroupToVertTablePsbl(Grid, Table, Group) from the type Item2Group refers to the missing type Grid"
      + "\nfilter cannot be resolved"
      + "\nforEach cannot be resolved"
      + "\ngetCorrModelElement cannot be resolved"
      + "\nsocket2Group cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nblocks cannot be resolved"
      + "\nfindFirst cannot be resolved"
      + "\n== cannot be resolved"
      + "\n&& cannot be resolved"
      + "\n== cannot be resolved"
      + "\nitem2FirstBlock cannot be resolved"
      + "\ngetOrCreateCorrModelElement cannot be resolved"
      + "\nitem2SecondBlock cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\nw cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n|| cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n|| cannot be resolved"
      + "\ne cannot be resolved"
      + "\n== cannot be resolved"
      + "\n|| cannot be resolved"
      + "\ne cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ne cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\ne cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\ne cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\ne cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n|| cannot be resolved"
      + "\nn cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n|| cannot be resolved"
      + "\ns cannot be resolved"
      + "\n== cannot be resolved"
      + "\n|| cannot be resolved"
      + "\ns cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\n&& cannot be resolved"
      + "\ns cannot be resolved"
      + "\nisOccupiedBy cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\ns cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\ns cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\ns cannot be resolved"
      + "\nasList cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nequals cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\ne cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\nequals cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\ns cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\ne cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\ne cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\ne cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\ns cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\ncontains cannot be resolved"
      + "\ns cannot be resolved"
      + "\n! cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nadd cannot be resolved"
      + "\ns cannot be resolved");
  }
  
  public void sourceToTarget(final /* String */Object s) {
    throw new Error("Unresolved compilation problems:"
      + "\nGroup cannot be resolved to a type."
      + "\nItemSocket cannot be resolved to a type."
      + "\nItem cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nHashMap cannot be resolved to a type."
      + "\nHashMap cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nFridge cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nHashMap cannot be resolved to a type."
      + "\nHashMap cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nSink cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nItemSocket cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nBlock cannot be resolved to a type."
      + "\nGrid cannot be resolved to a type."
      + "\nFridge cannot be resolved to a type."
      + "\nSink cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nTable cannot be resolved to a type."
      + "\nThe method filter(java.lang.Class) is undefined for the type TreeIterator<EObject>"
      + "\nThe method get(int) is undefined for the type EList<EObject>"
      + "\nThe method or field Arrays is undefined"
      + "\nHashMap cannot be resolved."
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nThe method or field Arrays is undefined"
      + "\nHashMap cannot be resolved."
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nThe method or field KitchenLanguageFactory is undefined"
      + "\nString cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nString cannot be resolved to a type."
      + "\nThere is no context to infer the closure\'s argument types from. Consider typing the arguments or put the closures into a typed context."
      + "\nThe method getCorrModelElement(EObject, String) from the type Elem2Elem refers to the missing type java.lang.Object"
      + "\nThe method checkIfBlockIsOccupiedByOtherGroup(Grid, Group, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method checkIfBlockIsOccupiedByOtherGroup(Grid, Group, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method chkAddFridgeToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method chkAddVertTableToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method setChoices(List) from the type Continuation refers to the missing type List"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nThe method setContext(HashMap) from the type Continuation refers to the missing type HashMap"
      + "\nThe method setFunction((HashMap, String)=>void) from the type Continuation refers to the missing type Object"
      + "\nThe method chkAddSinkToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method chkAddHorzTableToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method setChoices(List) from the type Continuation refers to the missing type List"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nThe method setContext(HashMap) from the type Continuation refers to the missing type HashMap"
      + "\nThe method setFunction((HashMap, String)=>void) from the type Continuation refers to the missing type Object"
      + "\nThe method chkAddFridgeToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nThe method chkAddSinkToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nThe method chkAddVertTableToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nThe method chkAddHorzTableToCorrGroupPsbl(Grid, Block, Block) from the type Item2Group refers to the missing type Grid"
      + "\nThe method makeCorrBetweenItemBlock(Item, Block, Block) from the type Item2Group refers to the missing type Item"
      + "\nforEach cannot be resolved"
      + "\nsocket2Group cannot be resolved"
      + "\ntargetElement cannot be resolved"
      + "\nitem cannot be resolved"
      + "\n== cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nsize cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nsize cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nget cannot be resolved"
      + "\noccupies cannot be resolved"
      + "\nget cannot be resolved"
      + "\nasList cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\nequals cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateFridge cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nget cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nget cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved"
      + "\nequals cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateTable cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nget cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nget cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved"
      + "\nasList cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nput cannot be resolved"
      + "\nequals cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateSink cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved"
      + "\nequals cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateTable cannot be resolved"
      + "\nget cannot be resolved"
      + "\nget cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nget cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nget cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nget cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateFridge cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateSink cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateTable cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved"
      + "\neINSTANCE cannot be resolved"
      + "\ncreateTable cannot be resolved"
      + "\nXPos cannot be resolved"
      + "\nXIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nYPos cannot be resolved"
      + "\nYIndex cannot be resolved"
      + "\n* cannot be resolved"
      + "\nblockSize cannot be resolved"
      + "\nitem cannot be resolved");
  }
  
  public void makeCorrBetweenItemBlock(final /* Item */Object item, final /* Block */Object firstBlock, final /* Block */Object secondBlock) {
    throw new Error("Unresolved compilation problems:"
      + "\ngetOrCreateCorrModelElement cannot be resolved"
      + "\nitem2FirstBlock cannot be resolved"
      + "\ngetOrCreateCorrModelElement cannot be resolved"
      + "\nitem2SecondBlock cannot be resolved"
      + "\nsourceElement cannot be resolved"
      + "\nsourceElement cannot be resolved");
  }
}
